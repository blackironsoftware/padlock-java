/*
 * Cell Block
 * The Black Iron Software Platform is a multi-tenant SaaS coupled with an OAuth compliant authentication service that helps jump start SaaS software development.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@blackironsoftware.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.blackironsoftware.api;

import com.blackironsoftware.api.models.Cell;
import com.blackironsoftware.api.models.Cells;
import com.blackironsoftware.api.models.CreateCellInput;
import com.blackironsoftware.api.models.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CellsApi
 */
@Ignore
public class CellsApiTest {

    private final CellsApi api = new CellsApi();

    
    /**
     * Create a cell
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCellTest() {
        CreateCellInput createCellInput = null;
        Cell response = api.createCell(createCellInput);

        // TODO: test validations
    }
    
    /**
     * Deletes a cell
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCellTest() {
        String cellId = null;
        api.deleteCell(cellId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a cell
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCellTest() {
        String cellId = null;
        Cell response = api.getCell(cellId);

        // TODO: test validations
    }
    
    /**
     * Retrieves a list of cells
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCellsTest() {
        Integer pageSize = null;
        String pageToken = null;
        Cells response = api.listCells(pageSize, pageToken);

        // TODO: test validations
    }
    
    /**
     * Update a cell
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCellTest() {
        String cellId = null;
        Cell cell = null;
        Cell response = api.updateCell(cellId, cell);

        // TODO: test validations
    }
    
}
